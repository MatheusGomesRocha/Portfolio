[{"C:\\Users\\mathe\\Documents\\portfolio\\src\\index.js":"1","C:\\Users\\mathe\\Documents\\portfolio\\src\\App.js":"2","C:\\Users\\mathe\\Documents\\portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\mathe\\Documents\\portfolio\\src\\AppStyled.js":"4","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\DefaultText.js":"5","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\AboutMeComponent.js":"6","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\AboutMeStyled.js":"7","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\BenefitsComponent.js":"8","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\BenefitsStyled.js":"9","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\MoreInfoComponent.js":"10","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\MoreInfoStyled.js":"11","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\CircleProgressBar.js":"12","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\CircleProgressBarBase.js":"13","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\WorksComponent.js":"14","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\WorksStyled.js":"15","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\ContactComponent.js":"16","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\ContactStyled.js":"17","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\facebook.js":"18","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\instagram.js":"19","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\linkedin.js":"20","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\FooterComponent.js":"21","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\FooterStyled.js":"22","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\ellipsis.js":"23","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\sun.js":"24","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\moon.js":"25","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\resize.js":"26","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\menu.js":"27","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\lighting.js":"28","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\search.js":"29","C:\\Users\\mathe\\Documents\\portfolio\\src\\header_img.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":14674,"mtime":1612804865404,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":2903,"mtime":1612804868644,"results":"35","hashOfConfig":"32"},{"size":410,"mtime":1612708905265,"results":"36","hashOfConfig":"32"},{"size":4131,"mtime":1612727532353,"results":"37","hashOfConfig":"32"},{"size":2108,"mtime":1612803504140,"results":"38","hashOfConfig":"32"},{"size":4602,"mtime":1612798675626,"results":"39","hashOfConfig":"32"},{"size":1625,"mtime":1612803792427,"results":"40","hashOfConfig":"32"},{"size":5952,"mtime":1612726212327,"results":"41","hashOfConfig":"32"},{"size":1979,"mtime":1612803926908,"results":"42","hashOfConfig":"32"},{"size":5363,"mtime":1612800668238,"results":"43","hashOfConfig":"32"},{"size":18951,"mtime":1612442294543,"results":"44","hashOfConfig":"32"},{"size":3179,"mtime":1612799886839,"results":"45","hashOfConfig":"32"},{"size":1625,"mtime":1612799870989,"results":"46","hashOfConfig":"32"},{"size":4529,"mtime":1612800165006,"results":"47","hashOfConfig":"32"},{"size":3052,"mtime":1612803978599,"results":"48","hashOfConfig":"32"},{"size":430,"mtime":1612534000621,"results":"49","hashOfConfig":"32"},{"size":3055,"mtime":1612534053480,"results":"50","hashOfConfig":"32"},{"size":708,"mtime":1612534109861,"results":"51","hashOfConfig":"32"},{"size":542,"mtime":1612804839467,"results":"52","hashOfConfig":"32"},{"size":339,"mtime":1612804784012,"results":"53","hashOfConfig":"32"},{"size":620,"mtime":1612722040979,"results":"54","hashOfConfig":"32"},{"size":2020,"mtime":1612654086353,"results":"55","hashOfConfig":"32"},{"size":639,"mtime":1612654107642,"results":"56","hashOfConfig":"32"},{"size":1025,"mtime":1612725690651,"results":"57","hashOfConfig":"32"},{"size":683,"mtime":1612725649026,"results":"58","hashOfConfig":"32"},{"size":762,"mtime":1612725761785,"results":"59","hashOfConfig":"32"},{"size":841,"mtime":1612725898101,"results":"60","hashOfConfig":"32"},{"size":8138,"mtime":1612803269749,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1rdlzct",{"filePath":"65","messages":"66","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mathe\\Documents\\portfolio\\src\\index.js",[],["139","140"],"C:\\Users\\mathe\\Documents\\portfolio\\src\\App.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"C:\\Users\\mathe\\Documents\\portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\AppStyled.js",["171"],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\DefaultText.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\AboutMeComponent.js",["172","173","174","175","176","177","178","179","180","181","182","183"],"import {DefaultText} from './DefaultText';\r\nimport Back from '../svg/back.svg';\r\nimport Mobile from '../svg/mobile.svg';\r\nimport Front from '../svg/front.svg';\r\n\r\nimport {\r\n    MainDiv,\r\n    TopDiv,\r\n    BlockDiv,\r\n    ItemDiv,\r\n    BlockTopDiv,\r\n    Svg,\r\n    BlockBottomDiv,\r\n} from './AboutMeStyled';\r\n\r\nexport default (props) => {\r\n    let array = [\r\n        {\r\n            id: 1,\r\n            svg: Front,\r\n            title: 'Programação Front-end',\r\n            content: 'Gosto de copiar designs e sempre tentar algo novo, como uma animação, um efeito e etc.',\r\n            subtitle: 'Linguagens que uso:',\r\n            languages: ['HTML & CSS'+'\\n', 'Bootstrap'+'\\n', 'Javascript'+'\\n', 'Jquery'+'\\n', 'React'+'\\n'],\r\n            bLeft: true,\r\n            bRight: false,\r\n        },\r\n\r\n        {\r\n            id: 2,\r\n            svg: Back,\r\n            title: 'Programação Back-end',\r\n            content: 'Com certeza é minha parte favorita da programação, gosto de pensar até resolver o problema de lógica de como fazer tal função.',\r\n            subtitle: 'Linguagens que uso:',\r\n            languages: ['PHP'+'\\n', 'Laravel'+'\\n', 'AJAX'+'\\n', 'Firebase'+'\\n'],\r\n            bLeft: false,\r\n            bRight: false,\r\n        },\r\n\r\n        {\r\n            id: 3,\r\n            svg: Mobile,\r\n            title: 'Programação Mobile',\r\n            content: 'Essa é a área que tenho menos tempo de estudo, mas é a com mais projetos feitos.',\r\n            subtitle: 'Linguagens que uso:',\r\n            languages: ['React-Native'+'\\n', 'Firebase'+'\\n'],\r\n            bLeft: false,\r\n            bRight: true,\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <MainDiv>\r\n            <TopDiv background={props.darkMode ? '#2f2e41' : '#fff'}>\r\n                <DefaultText mTop={\"30px\"} color={props.darkMode ? '#fff' : '#2f2e41'} align={\"center\"} bolder={\"bold\"} font={\"25px\"}>\r\n                    Meu nome é Matheus, e sou um desenvolvedor Full-Stack em formação\r\n                </DefaultText>\r\n\r\n                <DefaultText width={\"75%\"} font={\"22px\"} align={\"center\"} color={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                    Oi, tenho 19 anos e estou na área de programação à 2 anos. Comecei quando iniciei a faculdade de\r\n                    Análise\r\n                    e Desenvolvimento de Sistemas, a qual estou no 5º semestre. Não tenho nenhuma experiência\r\n                    profissional,\r\n                    apenas alguns projetos que fiz para estudo e experiência própria, visando um projeto real.\r\n                </DefaultText>\r\n            </TopDiv>\r\n\r\n            <BlockDiv>\r\n                {array.map((item, k) => (\r\n                    <ItemDiv background={props.darkMode ? '#2f2e41' : '#fff'} key={k} bLeft={item.bLeft ? '1px solid #999' : null} rightTop={item.bRight ? '10px' : null} rightBottom={item.bRight ? '10px' : null} leftTop={item.bLeft ? '10px' : null} leftBottom={item.bLeft ? '10px' : null}>\r\n                        <BlockTopDiv>\r\n                            <Svg src={item.svg} width={80} height={80} fill={\"#845EC2\"}/>\r\n\r\n                            <DefaultText color={props.darkMode ? ' #fff' : '#2f2e41'} font={\"20px\"} align={\"center\"} bolder={\"bold\"}>{item.title}</DefaultText>\r\n\r\n                            <DefaultText style={{height: 120}} font={\"18px\"} color={props.darkMode ? ' #fff' : '#2f2e41'} align={\"center\"}> {item.content} </DefaultText>\r\n                        </BlockTopDiv>\r\n\r\n                        <BlockBottomDiv>\r\n                            <DefaultText font={\"18px\"} align={\"center\"} color={\"#FF5E62\"} bolder={\"bold\"}>\r\n                                {item.subtitle}\r\n                            </DefaultText>\r\n\r\n                            <DefaultText font={\"18px\"} style={{whiteSpace: 'pre-wrap'}} align={\"center\"} bolder={\"bold\"} color={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                                {item.languages}\r\n                            </DefaultText>\r\n                        </BlockBottomDiv>\r\n\r\n                    </ItemDiv>\r\n                ))}\r\n            </BlockDiv>\r\n        </MainDiv>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\AboutMeStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\BenefitsComponent.js",["184"],"import {DefaultText} from \"./DefaultText\";\r\nimport Responsive from '../svg/resize';\r\nimport Clean from '../svg/menu';\r\nimport Fast from '../svg/lighting';\r\nimport Seo from '../svg/search';\r\n\r\nimport './Benefits.css';\r\n\r\nimport {\r\n    MainDiv,\r\n    GridDiv,\r\n    ItemDiv,\r\n    RowDiv,\r\n    SvgDiv,\r\n} from './BenefitsStyled';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <MainDiv background={props.darkMode ? '#2f2e41' : '#fff'}>\r\n            <DefaultText align={\"center\"} color={props.darkMode ? '#fff' : '#2f2e41'} font={\"40px\"} bolder={\"bold\"}>Benefícios de trabalhar comigo</DefaultText>\r\n            <GridDiv>\r\n                <ItemDiv display={props.display ? 'flex' : 'none'} className={\"item1\"}>\r\n                    <DefaultText mTop={\"0\"} font={\"25px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"}>O básico</DefaultText>\r\n                    <RowDiv>\r\n                        <SvgDiv background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                            <Responsive fill={props.darkMode ? '#2f2e41' : '#fff'}/>\r\n                        </SvgDiv>\r\n                        <DefaultText font={\"22px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Design\r\n                            Responsivo</DefaultText>\r\n                    </RowDiv>\r\n\r\n                    <RowDiv>\r\n                        <SvgDiv background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                            <Fast fill={props.darkMode ? '#2f2e41' : '#fff'}/>\r\n                        </SvgDiv>\r\n                        <DefaultText font={\"22px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Carregamento\r\n                            rápido</DefaultText>\r\n                    </RowDiv>\r\n\r\n                    <RowDiv>\r\n                        <SvgDiv background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                            <Clean fill={props.darkMode ? '#2f2e41' : '#fff'}/>\r\n                        </SvgDiv>\r\n                        <DefaultText font={\"22px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Código limpo</DefaultText>\r\n                    </RowDiv>\r\n\r\n                    <RowDiv>\r\n                        <SvgDiv background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                            <Seo fill={props.darkMode ? '#2f2e41' : '#fff'}/>\r\n                        </SvgDiv>\r\n                        <DefaultText font={\"22px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>SEO</DefaultText>\r\n                    </RowDiv>\r\n                </ItemDiv>\r\n\r\n                <ItemDiv display={props.display2 ? 'flex' : 'none'} className={\"item2\"}>\r\n                    <DefaultText font={\"25px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Fluxo rápido de\r\n                        trabalho</DefaultText>\r\n                    <DefaultText font={\"25px\"} color={\"#999\"} bolder={\"bold\"} mTop={\"0\"}>Rápido como um\r\n                        raio</DefaultText>\r\n                </ItemDiv>\r\n\r\n                <ItemDiv display={props.display3 ? 'flex' : 'none'} className={\"item3\"}>\r\n                    <DefaultText font={\"25px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Desenvolvimento</DefaultText>\r\n                    <DefaultText font={\"25px\"} color={\"#999\"} bolder={\"bold\"} mTop={\"0\"}>Tudo por uma mão</DefaultText>\r\n                    <DefaultText color={props.darkMode ? '#fff' : '#2f2e41'} width={\"80%\"} font={\"22px\"}>\r\n                        Todo o trabalho de desenvolvimento, do começo ao fim, será feito por uma pessoa, ou seja, você\r\n                        só\r\n                        precisará ter contado comigo.\r\n                    </DefaultText>\r\n                </ItemDiv>\r\n\r\n                <ItemDiv display={props.display4 ? 'flex' : 'none'} className={\"item4\"}>\r\n                    <DefaultText font={\"25px\"} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Relatório de\r\n                        atividades</DefaultText>\r\n                    <DefaultText font={\"25px\"} color={\"#999\"} bolder={\"bold\"} mTop={\"0\"}>Todo o suporte\r\n                        grantido</DefaultText>\r\n                    <DefaultText color={props.darkMode ? '#fff' : '#2f2e41'} font={\"22px\"} width={\"80%\"}>\r\n                        Caso o cliente queira, pode acompanhar de perto o projeto, quanto dele já foi feito, quanto\r\n                        falta e etc.\r\n                    </DefaultText>\r\n                </ItemDiv>\r\n            </GridDiv>\r\n\r\n        </MainDiv>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\BenefitsStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\MoreInfoComponent.js",["185","186"],"import {useState, useEffect} from \"react\";\r\nimport {DefaultText} from \"./DefaultText\";\r\nimport AnimatedNumber from \"animated-number-react\";\r\nimport Smile from '../svg/smile.svg';\r\nimport Clock from '../svg/clock.svg';\r\nimport Edit from '../svg/edit.svg';\r\nimport Coffee from '../svg/coffee-cup.svg';\r\nimport {CircleProgressBar1, CircleProgressBar2, CircleProgressBar3, CircleProgressBar4, CircleProgressBar5} from './CircleProgressBar';\r\n\r\nimport {\r\n    MainDiv,\r\n    GridTopDiv,\r\n    ItemCircleDiv,\r\n    GridDiv,\r\n    BlockDiv,\r\n    Svg\r\n} from \"./MoreInfoStyled\";\r\n\r\nexport default (props) => {\r\n    const [hover1, setHover1] = useState(false);\r\n    const [hover2, setHover2] = useState(false);\r\n    const [hover3, setHover3] = useState(false);\r\n    const [hover4, setHover4] = useState(false);\r\n\r\n    return (\r\n        <MainDiv background={props.darkMode ? '#2f2e41' : '#fff'}>\r\n\r\n            <DefaultText align={\"center\"} font={\"40px\"} bolder={\"bold\"} color={props.darkMode ? '#fff' : '#2f2e41'} >Minhas especialidades</DefaultText>\r\n            <DefaultText mTop={\"0\"} align={\"center\"} font={\"25px\"} color={\"#999\"} >Algumas de minhas habilidades</DefaultText>\r\n\r\n            <GridTopDiv>\r\n                <ItemCircleDiv>\r\n                    <CircleProgressBar1 />\r\n                    <DefaultText mTop={\"-10px\"} color={props.darkMode ? \"#fff\" : '#2f2e41'} font={\"25px\"} align={\"center\"}>Back-end</DefaultText>\r\n                </ItemCircleDiv>\r\n\r\n                <ItemCircleDiv>\r\n                    <CircleProgressBar2 />\r\n                    <DefaultText mTop={\"-10px\"} color={props.darkMode ? \"#fff\" : '#2f2e41'} font={\"25px\"} align={\"center\"}>Front-end</DefaultText>\r\n                </ItemCircleDiv>\r\n\r\n                <ItemCircleDiv>\r\n                    <CircleProgressBar3 />\r\n                    <DefaultText mTop={\"-10px\"} color={props.darkMode ? \"#fff\" : '#2f2e41'} font={\"25px\"} align={\"center\"}>Mobile</DefaultText>\r\n                </ItemCircleDiv>\r\n\r\n                <ItemCircleDiv>\r\n                    <CircleProgressBar4 />\r\n                    <DefaultText mTop={\"-10px\"} color={props.darkMode ? \"#fff\" : '#2f2e41'} font={\"25px\"} align={\"center\"}>Performance</DefaultText>\r\n                </ItemCircleDiv>\r\n\r\n                <ItemCircleDiv>\r\n                    <CircleProgressBar5 />\r\n                    <DefaultText mTop={\"-10px\"} color={props.darkMode ? \"#fff\" : '#2f2e41'} font={\"25px\"} align={\"center\"}>Expriência do usuário</DefaultText>\r\n                </ItemCircleDiv>\r\n            </GridTopDiv>\r\n\r\n            <GridDiv>\r\n                <BlockDiv display={props.showMoreInfo ? 'flex' : 'none'} onMouseOver={() => setHover1(true)}\r\n                          onMouseOut={() => setHover1(false)} background={\"#FF5E62\"} color={\"#fff\"}>\r\n                    <Svg transform={hover1 ? 'scale(1.2)' : 'scale(1)'} src={Smile}/>\r\n                    {props.showMoreInfo ?\r\n                        <AnimatedNumber\r\n                            value={19}\r\n                            formatValue={n => n.toFixed(0)}\r\n                            duration={3000}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <DefaultText color={\"#fff\"} align={\"center\"} bolder={\"bold\"} font={\"25px\"} mTop={\"10px\"}>Clientes\r\n                        satisfeitos</DefaultText>\r\n                </BlockDiv>\r\n\r\n                <BlockDiv display={props.showMoreInfo ? 'flex' : 'none'} onMouseOver={() => setHover2(true)}\r\n                          onMouseOut={() => setHover2(false)}>\r\n                    <Svg transform={hover2 ? 'scale(1.2)' : 'scale(1)'} src={Coffee}/>\r\n                    {props.showMoreInfo ?\r\n                        <AnimatedNumber\r\n                            value={2147}\r\n                            formatValue={n => n.toFixed(0)}\r\n                            duration={3000}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <DefaultText color={props.darkMode ? \"#fff\" : '#2f2e41'} align={\"center\"} bolder={\"bold\"} font={\"25px\"} mTop={\"10px\"}>Copos de\r\n                        café</DefaultText>\r\n                </BlockDiv>\r\n\r\n                <BlockDiv display={props.showMoreInfo ? 'flex' : 'none'} onMouseOver={() => setHover3(true)}\r\n                          onMouseOut={() => setHover3(false)} background={\"#FF5E62\"} color={\"#fff\"}>\r\n                    <Svg transform={hover3 ? 'scale(1.2)' : 'scale(1)'} src={Edit}/>\r\n                    {props.showMoreInfo ?\r\n                        <AnimatedNumber\r\n                            value={3485}\r\n                            formatValue={n => n.toFixed(0)}\r\n                            duration={3000}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <DefaultText color={\"#fff\"} align={\"center\"} bolder={\"bold\"} font={\"25px\"} mTop={\"10px\"}>Linhas de\r\n                        códigos</DefaultText>\r\n                </BlockDiv>\r\n\r\n                <BlockDiv display={props.showMoreInfo ? 'flex' : 'none'} onMouseOver={() => setHover4(true)}\r\n                          onMouseOut={() => setHover4(false)}>\r\n                    <Svg transform={hover4 ? 'scale(1.2)' : 'scale(1)'} src={Clock}/>\r\n                    {props.showMoreInfo ?\r\n                        <AnimatedNumber\r\n                            value={8}\r\n                            formatValue={n => n.toFixed(0)}\r\n                            duration={3000}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n\r\n                    <DefaultText color={props.darkMode ? \"#fff\" : '#2f2e41'} align={\"center\"} bolder={\"bold\"} font={\"25px\"} mTop={\"10px\"}>Projetos\r\n                        completados</DefaultText>\r\n                </BlockDiv>\r\n            </GridDiv>\r\n\r\n\r\n        </MainDiv>\r\n    )\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\MoreInfoStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\CircleProgressBar.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\CircleProgressBarBase.js",["187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst INITIAL_OFFSET = 25;\r\nconst circleConfig = {\r\n    viewBox: '0 0 38 38',\r\n    x: '19',\r\n    y: '19',\r\n    radio: '15.91549430918954'\r\n};\r\n\r\nconst CircleProgressBarBase = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\n\r\nexport const CircleProgressBarBase1 = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\nexport const CircleProgressBarBase2 = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\nexport const CircleProgressBarBase3 = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\nexport const CircleProgressBarBase4 = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\nexport const CircleProgressBarBase5 = ({\r\n                                   className,\r\n                                   strokeColor,\r\n                                   strokeWidth,\r\n                                   innerText,\r\n                                   legendText,\r\n                                   percentage,\r\n                                   trailStrokeWidth,\r\n                                   trailStrokeColor,\r\n                                   trailSpaced,\r\n                                   speed\r\n                               }) => {\r\n    const [progressBar, setProgressBar] = useState(0);\r\n    const pace = percentage / speed;\r\n    const updatePercentage = () => {\r\n        setTimeout(() => {\r\n            setProgressBar(progressBar + 1);\r\n        }, pace);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (percentage > 0) updatePercentage();\r\n    }, [percentage]);\r\n\r\n    useEffect(() => {\r\n        if (progressBar < percentage) updatePercentage();\r\n    }, [progressBar]);\r\n\r\n    return (\r\n        <figure className={className}>\r\n            <svg viewBox={circleConfig.viewBox}>\r\n                <circle\r\n                    className=\"donut-ring\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={trailStrokeColor}\r\n                    strokeWidth={trailStrokeWidth}\r\n                    strokeDasharray={trailSpaced ? 1 : 0}\r\n                />\r\n\r\n                <circle\r\n                    className=\"donut-segment\"\r\n                    cx={circleConfig.x}\r\n                    cy={circleConfig.y}\r\n                    r={circleConfig.radio}\r\n                    fill=\"transparent\"\r\n                    stroke={strokeColor}\r\n                    strokeWidth={strokeWidth}\r\n                    strokeDasharray={`${progressBar} ${100 - progressBar}`}\r\n                    strokeDashoffset={INITIAL_OFFSET}\r\n                />\r\n\r\n                <g className=\"chart-text\">\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-number\">\r\n                        {progressBar}%\r\n                    </text>\r\n                    <text x=\"50%\" y=\"50%\" className=\"chart-label\">\r\n                        {innerText}\r\n                    </text>\r\n                </g>\r\n            </svg>\r\n            {legendText && (\r\n                <figcaption className=\"figure-key\">\r\n                    <ul\r\n                        className=\"figure-key-list\"\r\n                        aria-hidden=\"true\"\r\n                        role=\"presentation\"\r\n                    >\r\n                        <li>\r\n                            <span className=\"shape-circle\" />\r\n                            <span>{legendText}</span>\r\n                        </li>\r\n                    </ul>\r\n                </figcaption>\r\n            )}\r\n        </figure>\r\n    );\r\n};\r\n\r\n\r\nCircleProgressBarBase1.defaultProps = {\r\n    strokeColor: 'blueviolet',\r\n    strokeWidth: 3,\r\n    legendText: '',\r\n    percentage: 90,\r\n    trailStrokeWidth: 3,\r\n    trailStrokeColor: '#d2d3d4',\r\n    trailSpaced: false,\r\n    speed: 5\r\n};\r\nCircleProgressBarBase2.defaultProps = {\r\n    strokeColor: 'blueviolet',\r\n    strokeWidth: 3,\r\n    legendText: '',\r\n    percentage: 75,\r\n    trailStrokeWidth: 3,\r\n    trailStrokeColor: '#d2d3d4',\r\n    trailSpaced: false,\r\n    speed: 5\r\n};\r\nCircleProgressBarBase3.defaultProps = {\r\n    strokeColor: 'blueviolet',\r\n    strokeWidth: 3,\r\n    legendText: '',\r\n    percentage: 80,\r\n    trailStrokeWidth: 3,\r\n    trailStrokeColor: '#d2d3d4',\r\n    trailSpaced: false,\r\n    speed: 5\r\n};\r\nCircleProgressBarBase4.defaultProps = {\r\n    strokeColor: 'blueviolet',\r\n    strokeWidth: 3,\r\n    legendText: '',\r\n    percentage: 72,\r\n    trailStrokeWidth: 3,\r\n    trailStrokeColor: '#d2d3d4',\r\n    trailSpaced: false,\r\n    speed: 5\r\n};\r\nCircleProgressBarBase5.defaultProps = {\r\n    strokeColor: 'blueviolet',\r\n    strokeWidth: 3,\r\n    legendText: '',\r\n    percentage: 93,\r\n    trailStrokeWidth: 3,\r\n    trailStrokeColor: '#d2d3d4',\r\n    trailSpaced: false,\r\n    speed: 5\r\n};\r\n\r\n\r\n","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\WorksComponent.js",["200"],"import {useState} from \"react\";\r\nimport {DefaultText} from \"./DefaultText\";\r\nimport Project1 from '../img/project1.png';\r\nimport {useMediaQuery} from \"react-responsive\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nimport {\r\n    MainDiv,\r\n\r\n    GridDiv,\r\n    BlockDiv,\r\n    ItemDiv,\r\n    ItemHiddenDiv\r\n} from \"./WorksStyled\";\r\n\r\nexport default (props) => {\r\n    const [hoverWork1, setHoverWork1] = useState(false);\r\n    const [hoverWork2, setHoverWork2] = useState(false);\r\n\r\n    const isMobile = useMediaQuery({                                     // 18 - Da uma largura para mobile devices\r\n        query: '(max-width: 800px)'\r\n    });\r\n\r\n    const DefaultBtn = withStyles(() => ({\r\n        root: {\r\n            border: '1px solid #FF5E62',\r\n            padding: 20,\r\n            fontSize: 16,\r\n            height: isMobile ? 40 : 50,\r\n            marginTop: 20,\r\n            borderRadius: 10,\r\n            width: '60%',\r\n            color: '#FF5E62',\r\n            fontWeight: 'bold',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: '500ms',\r\n\r\n            '&:hover': {\r\n                backgroundColor: '#FF5E62',\r\n                color: '#fff',\r\n            }\r\n        },\r\n    }))(Button);\r\n\r\n    return (\r\n        <MainDiv background={props.darkMode ? '#2f2e41' : '#fff'}>\r\n            <DefaultText mTop={\"0\"} align={\"center\"} bolder={\"bold\"} font={isMobile ? '30px' : '40px'} color={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                Meus trabalhos recentes\r\n            </DefaultText>\r\n            <DefaultText width={\"90%\"} mTop={\"0\"} align={\"center\"} font={isMobile ? '25px' : '25px'} color={'#999'}>\r\n                Uma pequena amostra dos meus trabalhos\r\n            </DefaultText>\r\n\r\n            <GridDiv>\r\n                <BlockDiv onMouseOver={() => setHoverWork1(true)} onMouseOut={() => setHoverWork1(false)}>\r\n                    <ItemDiv src={Project1}></ItemDiv>\r\n                    <ItemHiddenDiv display={hoverWork1 ? 'flex' : 'none'}>\r\n                        <DefaultText mTop={\"0\"} align={\"center\"} font={isMobile ? '20px' : '30px'} bolder={\"bold\"} color={\"#fff\"}>Cópia de Design</DefaultText>\r\n                        <DefaultText width={\"80%\"} align={\"center\"} font={isMobile ? '15px' : '25px'} color={\"#fff\"}>\r\n                            Este site foi uma cópia que fiz de um design de um site já existente, apenas para aparender\r\n                            algumas coisas, usei React e algumas animações em css.\r\n                        </DefaultText>\r\n                        <DefaultBtn target={\"_blank\"} href={\"https://matheusgomesrocha.github.io/DesignClone1/\"}>Visite o site</DefaultBtn>\r\n                    </ItemHiddenDiv>\r\n                </BlockDiv>\r\n\r\n                <BlockDiv onMouseOver={() => setHoverWork2(true)} onMouseOut={() => setHoverWork2(false)}>\r\n                    <ItemDiv src={Project1}></ItemDiv>\r\n                    <ItemHiddenDiv display={hoverWork2 ? 'flex' : 'none'}></ItemHiddenDiv>\r\n                </BlockDiv>\r\n            </GridDiv>\r\n        </MainDiv>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\WorksStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\ContactComponent.js",["201","202","203"],"import {useState} from 'react';\r\nimport {DefaultText} from './DefaultText';\r\nimport './Contact.css';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nimport Facebook from '../svg/facebook';\r\nimport Instagram from '../svg/instagram';\r\nimport Linkedin from '../svg/linkedin';\r\n\r\nimport {\r\n    MainDiv,\r\n    LeftDiv,\r\n    RightDiv,\r\n    RightCenterDiv,\r\n    Input,\r\n    InputBig,\r\n    IconDiv,\r\n    IconBall,\r\n    Icon,\r\n} from \"./ContactStyled\";\r\nimport {useMediaQuery} from \"react-responsive\";\r\n\r\nexport default (props) => {\r\n    const [secondaryColor, setSecondaryColor] = useState('#999');\r\n\r\n    const isMobile = useMediaQuery({                                     // 18 - Da uma largura para mobile devices\r\n        query: '(max-width: 800px)'\r\n    });\r\n\r\n    const DefaultBtn = withStyles(() => ({\r\n        root: {\r\n            backgroundColor: props.darkMode ? '#fff' : '#2f2e41',\r\n            padding: 20,\r\n            fontSize: 16,\r\n            height: 50,\r\n            borderRadius: 10,\r\n            color: props.darkMode ? '#2f2e41' : '#fff',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transition: '500ms',\r\n            fontFamily: 'candara',\r\n\r\n            '&:hover': {\r\n                backgroundColor: '#FF5E62',\r\n            }\r\n        },\r\n    }))(Button);\r\n\r\n    return(\r\n        <MainDiv>\r\n            <LeftDiv background={props.darkMode ? '#2f2e41' : '#fff'} display={props.showContact ? 'flex' : 'none'}>\r\n                <DefaultText mTop={isMobile ? '0' : '100px'} align={\"center\"} font={isMobile ? '25px' : '30px'} color={'#999'}>Aberto para negócios</DefaultText>\r\n                <DefaultText align={\"center\"} font={isMobile ? '30px' : '35px'} color={props.darkMode ? '#fff' : '#2f2e41'} bolder={\"bold\"} mTop={\"0\"}>Minhas redes sociais</DefaultText>\r\n                <DefaultText width={\"80%\"} align={\"center\"} font={isMobile ? '20px' : '25px'} color={secondaryColor} mTop={\"10px\"}>\r\n                    Por aqui você pode me contatar para tirar dúvidas sobre preço, horário, processo de criação e etc...\r\n                </DefaultText>\r\n\r\n                <DefaultText mTop={\"50px\"} align={\"center\"} color={'#999'} font={isMobile ? '20px' : '25px'} bolder={\"bold\"}><span style={{color: props.darkMode ? '#fff' : '#2f2e41'}}>Telefone: </span> (85) 99253-3108</DefaultText>\r\n                <DefaultText mTop={\"10px\"} align={\"center\"} color={'#999'} font={isMobile ? '20px' : '25px'} bolder={\"bold\"}><span style={{color: props.darkMode ? '#fff' : '#2f2e41'}}>Email: </span> matheusgomes192@hotmail.com</DefaultText>\r\n\r\n                <IconDiv>\r\n                    <IconBall background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                        <Facebook fill={props.darkMode ? '#2f2e41' : '#fff'} />\r\n                    </IconBall>\r\n                    <IconBall background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                        <Instagram fill={props.darkMode ? '#2f2e41' : '#fff'} />\r\n                    </IconBall>\r\n                    <IconBall background={props.darkMode ? '#fff' : '#2f2e41'}>\r\n                        <Linkedin fill={props.darkMode ? '#2f2e41' : '#fff'} />\r\n                    </IconBall>\r\n                </IconDiv>\r\n            </LeftDiv>\r\n\r\n            <RightDiv background={props.darkMode ? '#3C3A52' : '#f5f5f5'} display={props.showContact ? 'flex' : 'none'}>\r\n                <DefaultText align={\"center\"} font={isMobile ? '30px' : '35px'} bolder={\"bold\"} color={props.darkMode ? '#fff' : '#2f2e41'}>Fale comigo</DefaultText>\r\n                <DefaultText mTop={\"0px\"} align={\"center\"} font={isMobile ? '25px' : '35px'} bolder={\"bold\"} color={'#999'}>Apenas para ofertas de trabalhos</DefaultText>\r\n                <RightCenterDiv>\r\n                    <Input color={props.darkMode ? '#fff' : '#2f2e41'} background={props.darkMode ? '#2f2e41' : '#fff'} className={\"input1\"} placeholder={\"Seu nome\"} />\r\n                    <Input color={props.darkMode ? '#fff' : '#2f2e41'} background={props.darkMode ? '#2f2e41' : '#fff'} className={\"input2\"} placeholder={\"Seu Email\"} />\r\n                    <InputBig color={props.darkMode ? '#fff' : '#2f2e41'} background={props.darkMode ? '#2f2e41' : '#fff'} className={\"input3\"} placeholder={\"Sua proposta\"} />\r\n                    <DefaultBtn className={\"input4\"}>Enviar Mensagem</DefaultBtn>\r\n                </RightCenterDiv>\r\n            </RightDiv>\r\n\r\n        </MainDiv>\r\n\r\n\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\ContactStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\facebook.js",["204"],"export default (props) => {\r\n    return(\r\n        <svg fill={props.fill} id=\"Bold\" enable-background=\"new 0 0 24 24\" height=\"25px\" viewBox=\"0 0 24 24\" width=\"25px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m15.997 3.985h2.191v-3.816c-.378-.052-1.678-.169-3.192-.169-3.159 0-5.323 1.987-5.323 5.639v3.361h-3.486v4.266h3.486v10.734h4.274v-10.733h3.345l.531-4.266h-3.877v-2.939c.001-1.233.333-2.077 2.051-2.077z\"/></svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\instagram.js",["205"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} height=\"25px\" viewBox=\"0 0 511 511.9\" width=\"25px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"m510.949219 150.5c-1.199219-27.199219-5.597657-45.898438-11.898438-62.101562-6.5-17.199219-16.5-32.597657-29.601562-45.398438-12.800781-13-28.300781-23.101562-45.300781-29.5-16.296876-6.300781-34.898438-10.699219-62.097657-11.898438-27.402343-1.300781-36.101562-1.601562-105.601562-1.601562s-78.199219.300781-105.5 1.5c-27.199219 1.199219-45.898438 5.601562-62.097657 11.898438-17.203124 6.5-32.601562 16.5-45.402343 29.601562-13 12.800781-23.097657 28.300781-29.5 45.300781-6.300781 16.300781-10.699219 34.898438-11.898438 62.097657-1.300781 27.402343-1.601562 36.101562-1.601562 105.601562s.300781 78.199219 1.5 105.5c1.199219 27.199219 5.601562 45.898438 11.902343 62.101562 6.5 17.199219 16.597657 32.597657 29.597657 45.398438 12.800781 13 28.300781 23.101562 45.300781 29.5 16.300781 6.300781 34.898438 10.699219 62.101562 11.898438 27.296876 1.203124 36 1.5 105.5 1.5s78.199219-.296876 105.5-1.5c27.199219-1.199219 45.898438-5.597657 62.097657-11.898438 34.402343-13.300781 61.601562-40.5 74.902343-74.898438 6.296876-16.300781 10.699219-34.902343 11.898438-62.101562 1.199219-27.300781 1.5-36 1.5-105.5s-.101562-78.199219-1.300781-105.5zm-46.097657 209c-1.101562 25-5.300781 38.5-8.800781 47.5-8.601562 22.300781-26.300781 40-48.601562 48.601562-9 3.5-22.597657 7.699219-47.5 8.796876-27 1.203124-35.097657 1.5-103.398438 1.5s-76.5-.296876-103.402343-1.5c-25-1.097657-38.5-5.296876-47.5-8.796876-11.097657-4.101562-21.199219-10.601562-29.398438-19.101562-8.5-8.300781-15-18.300781-19.101562-29.398438-3.5-9-7.699219-22.601562-8.796876-47.5-1.203124-27-1.5-35.101562-1.5-103.402343s.296876-76.5 1.5-103.398438c1.097657-25 5.296876-38.5 8.796876-47.5 4.101562-11.101562 10.601562-21.199219 19.203124-29.402343 8.296876-8.5 18.296876-15 29.398438-19.097657 9-3.5 22.601562-7.699219 47.5-8.800781 27-1.199219 35.101562-1.5 103.398438-1.5 68.402343 0 76.5.300781 103.402343 1.5 25 1.101562 38.5 5.300781 47.5 8.800781 11.097657 4.097657 21.199219 10.597657 29.398438 19.097657 8.5 8.300781 15 18.300781 19.101562 29.402343 3.5 9 7.699219 22.597657 8.800781 47.5 1.199219 27 1.5 35.097657 1.5 103.398438s-.300781 76.300781-1.5 103.300781zm0 0\"/>\r\n            <path\r\n                d=\"m256.449219 124.5c-72.597657 0-131.5 58.898438-131.5 131.5s58.902343 131.5 131.5 131.5c72.601562 0 131.5-58.898438 131.5-131.5s-58.898438-131.5-131.5-131.5zm0 216.800781c-47.097657 0-85.300781-38.199219-85.300781-85.300781s38.203124-85.300781 85.300781-85.300781c47.101562 0 85.300781 38.199219 85.300781 85.300781s-38.199219 85.300781-85.300781 85.300781zm0 0\"/>\r\n            <path\r\n                d=\"m423.851562 119.300781c0 16.953125-13.746093 30.699219-30.703124 30.699219-16.953126 0-30.699219-13.746094-30.699219-30.699219 0-16.957031 13.746093-30.699219 30.699219-30.699219 16.957031 0 30.703124 13.742188 30.703124 30.699219zm0 0\"/>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\linkedin.js",["206"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} id=\"Bold\" enable-background=\"new 0 0 24 24\" height=\"25px\" viewBox=\"0 0 24 24\" width=\"25px\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"m23.994 24v-.001h.006v-8.802c0-4.306-.927-7.623-5.961-7.623-2.42 0-4.044 1.328-4.707 2.587h-.07v-2.185h-4.773v16.023h4.97v-7.934c0-2.089.396-4.109 2.983-4.109 2.549 0 2.587 2.384 2.587 4.243v7.801z\"/>\r\n            <path d=\"m.396 7.977h4.976v16.023h-4.976z\"/>\r\n            <path\r\n                d=\"m2.882 0c-1.591 0-2.882 1.291-2.882 2.882s1.291 2.909 2.882 2.909 2.882-1.318 2.882-2.909c-.001-1.591-1.292-2.882-2.882-2.882z\"/>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\FooterComponent.js",["207"],"C:\\Users\\mathe\\Documents\\portfolio\\src\\components\\FooterStyled.js",[],"C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\ellipsis.js",["208"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} height=\"25px\" viewBox=\"0 -192 512 512\" width=\"25px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"m320 64c0 35.347656-28.652344 64-64 64s-64-28.652344-64-64 28.652344-64 64-64 64 28.652344 64 64zm0 0\"/>\r\n            <path\r\n                d=\"m128 64c0 35.347656-28.652344 64-64 64s-64-28.652344-64-64 28.652344-64 64-64 64 28.652344 64 64zm0 0\"/>\r\n            <path\r\n                d=\"m512 64c0 35.347656-28.652344 64-64 64s-64-28.652344-64-64 28.652344-64 64-64 64 28.652344 64 64zm0 0\"/>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\sun.js",["209"],"export default (props) => {\r\n\treturn(\r\n\t<svg width={\"35px\"} height={\"35px\"} fill={props.fill} version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\r\n\tviewBox=\"0 0 302.4 302.4\" >\r\n\t\t<g>\r\n\t\t<g>\r\n\t\t<path d=\"M204.8,97.6C191.2,84,172,75.2,151.2,75.2s-40,8.4-53.6,22.4c-13.6,13.6-22.4,32.8-22.4,53.6s8.8,40,22.4,53.6\r\n\tc13.6,13.6,32.8,22.4,53.6,22.4s40-8.4,53.6-22.4c13.6-13.6,22.4-32.8,22.4-53.6S218.8,111.2,204.8,97.6z M190.4,190.4\r\n\tc-10,10-24,16-39.2,16s-29.2-6-39.2-16s-16-24-16-39.2s6-29.2,16-39.2s24-16,39.2-16s29.2,6,39.2,16s16,24,16,39.2\r\n\tS200.4,180.4,190.4,190.4z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M292,140.8h-30.8c-5.6,0-10.4,4.8-10.4,10.4c0,5.6,4.8,10.4,10.4,10.4H292c5.6,0,10.4-4.8,10.4-10.4\r\nC302.4,145.6,297.6,140.8,292,140.8z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M151.2,250.8c-5.6,0-10.4,4.8-10.4,10.4V292c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4v-30.8\r\nC161.6,255.6,156.8,250.8,151.2,250.8z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M258,243.6l-22-22c-3.6-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0S262,247.6,258,243.6z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M151.2,0c-5.6,0-10.4,4.8-10.4,10.4v30.8c0,5.6,4.8,10.4,10.4,10.4c5.6,0,10.4-4.8,10.4-10.4V10.4\r\nC161.6,4.8,156.8,0,151.2,0z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M258.4,44.4c-4-4-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4c3.6,4,10.4,4,14.4,0l22-22C262.4,54.8,262.4,48.4,258.4,44.4z\"\r\n/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M41.2,140.8H10.4c-5.6,0-10.4,4.8-10.4,10.4s4.4,10.4,10.4,10.4h30.8c5.6,0,10.4-4.8,10.4-10.4\r\nC51.6,145.6,46.8,140.8,41.2,140.8z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M80.4,221.6c-3.6-4-10.4-4-14.4,0l-22,22c-4,4-4,10.4,0,14.4s10.4,4,14.4,0l22-22C84.4,232,84.4,225.6,80.4,221.6z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M80.4,66.4l-22-22c-4-4-10.4-4-14.4,0s-4,10.4,0,14.4l22,22c4,4,10.4,4,14.4,0S84.4,70.4,80.4,66.4z\"/>\r\n</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n);\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\moon.js",["210"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} height=\"35px\" viewBox=\"-12 0 448 448.04455\" width=\"35px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"m224.023438 448.03125c85.714843.902344 164.011718-48.488281 200.117187-126.230469-22.722656 9.914063-47.332031 14.769531-72.117187 14.230469-97.15625-.109375-175.890626-78.84375-176-176 .972656-65.71875 37.234374-125.832031 94.910156-157.351562-15.554688-1.980469-31.230469-2.867188-46.910156-2.648438-123.714844 0-224.0000005 100.289062-224.0000005 224 0 123.714844 100.2851565 224 224.0000005 224zm0 0\"/>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\resize.js",["211"],"export default (props) => {\r\n    return(\r\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n    viewBox=\"0 0 512 512\" width={\"25px\"} height={\"25px\"}>\r\n        <g>\r\n        <g>\r\n        <path d=\"M492,0H344.212c-11.046,0-20,8.954-20,20s8.954,20,20,20h99.503L283.394,200.322c-7.811,7.811-7.811,20.474,0,28.284\r\n    c7.81,7.81,20.473,7.811,28.284,0L472,68.284v99.503c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20V20\r\n    C512,9.115,503.154,0,492,0z\" fill={props.fill}/>\r\n    </g>\r\n</g>\r\n<g>\r\n<g>\r\n<path d=\"M228.606,283.394c-7.811-7.81-20.474-7.811-28.284,0L40,443.716v-99.503c0-11.046-8.954-20-20-20s-20,8.954-20,20V492\r\nc0,10.866,8.853,20,20,20h147.788c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H68.284l160.322-160.322\r\nC236.417,303.867,236.417,291.204,228.606,283.394z\" fill={props.fill}/>\r\n</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n);\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\menu.js",["212"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} height=\"25px\" viewBox=\"0 -53 384 384\" width=\"25px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"m368 154.667969h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"/>\r\n            <path\r\n                d=\"m368 32h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"/>\r\n            <path\r\n                d=\"m368 277.332031h-352c-8.832031 0-16-7.167969-16-16s7.167969-16 16-16h352c8.832031 0 16 7.167969 16 16s-7.167969 16-16 16zm0 0\"/>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\lighting.js",["213"],"export default (props) => {\r\n    return (\r\n        <svg fill={props.fill} id=\"Capa_1\" enable-background=\"new 0 0 511.999 511.999\" height=\"25px\"\r\n             viewBox=\"0 0 511.999 511.999\" width=\"25px\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g>\r\n                <path\r\n                    d=\"m389.053 7.603c-2.666-4.703-7.647-7.603-13.052-7.603h-180c-6.885 0-12.876 4.688-14.546 11.367l-60 241c-1.128 4.482-.117 9.229 2.725 12.861 2.842 3.647 7.207 5.771 11.821 5.771h68.35l-82.397 220.727c-2.637 7.031.337 14.927 6.943 18.486 6.636 3.556 14.846 1.653 19.233-4.395l240-331c3.325-4.556 3.794-10.591 1.245-15.63-2.563-5.024-7.734-8.188-13.374-8.188h-63.501l76.362-128.28c2.784-4.643 2.857-10.414.191-15.116z\"/>\r\n            </g>\r\n        </svg>\r\n    );\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\svg\\search.js",["214"],"export default (props) => {\r\n\treturn(\r\n\t<svg version=\"1.1\" id=\"Capa_1\" width={\"25px\"} height={\"25px\"} x=\"0px\" y=\"0px\"\r\n\tviewBox=\"0 0 512.005 512.005\" >\r\n\t\t<g>\r\n\t\t<g>\r\n\t\t<path fill={props.fill} d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\r\n\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\r\n\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\r\n\tM202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n<g>\r\n</g>\r\n</svg>\r\n\r\n);\r\n}","C:\\Users\\mathe\\Documents\\portfolio\\src\\header_img.js",["215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":38,"column":1,"nodeType":"222","endLine":329,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":236,"column":52,"nodeType":"225","messageId":"226","endLine":236,"endColumn":54},{"ruleId":"223","severity":1,"message":"224","line":236,"column":71,"nodeType":"225","messageId":"226","endLine":236,"endColumn":73},{"ruleId":"223","severity":1,"message":"227","line":236,"column":71,"nodeType":"225","messageId":"226","endLine":236,"endColumn":73},{"ruleId":"223","severity":1,"message":"227","line":236,"column":98,"nodeType":"225","messageId":"226","endLine":236,"endColumn":100},{"ruleId":"223","severity":1,"message":"224","line":242,"column":56,"nodeType":"225","messageId":"226","endLine":242,"endColumn":58},{"ruleId":"223","severity":1,"message":"224","line":242,"column":69,"nodeType":"225","messageId":"226","endLine":242,"endColumn":71},{"ruleId":"223","severity":1,"message":"227","line":242,"column":69,"nodeType":"225","messageId":"226","endLine":242,"endColumn":71},{"ruleId":"223","severity":1,"message":"227","line":242,"column":84,"nodeType":"225","messageId":"226","endLine":242,"endColumn":86},{"ruleId":"223","severity":1,"message":"224","line":245,"column":57,"nodeType":"225","messageId":"226","endLine":245,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":245,"column":70,"nodeType":"225","messageId":"226","endLine":245,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":245,"column":70,"nodeType":"225","messageId":"226","endLine":245,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":245,"column":85,"nodeType":"225","messageId":"226","endLine":245,"endColumn":87},{"ruleId":"223","severity":1,"message":"224","line":248,"column":60,"nodeType":"225","messageId":"226","endLine":248,"endColumn":62},{"ruleId":"223","severity":1,"message":"224","line":248,"column":73,"nodeType":"225","messageId":"226","endLine":248,"endColumn":75},{"ruleId":"223","severity":1,"message":"227","line":248,"column":73,"nodeType":"225","messageId":"226","endLine":248,"endColumn":75},{"ruleId":"223","severity":1,"message":"227","line":248,"column":88,"nodeType":"225","messageId":"226","endLine":248,"endColumn":90},{"ruleId":"223","severity":1,"message":"224","line":251,"column":57,"nodeType":"225","messageId":"226","endLine":251,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":251,"column":70,"nodeType":"225","messageId":"226","endLine":251,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":251,"column":70,"nodeType":"225","messageId":"226","endLine":251,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":251,"column":85,"nodeType":"225","messageId":"226","endLine":251,"endColumn":87},{"ruleId":"223","severity":1,"message":"224","line":254,"column":57,"nodeType":"225","messageId":"226","endLine":254,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":254,"column":70,"nodeType":"225","messageId":"226","endLine":254,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":254,"column":70,"nodeType":"225","messageId":"226","endLine":254,"endColumn":72},{"ruleId":"223","severity":1,"message":"227","line":254,"column":85,"nodeType":"225","messageId":"226","endLine":254,"endColumn":87},{"ruleId":"223","severity":1,"message":"224","line":257,"column":59,"nodeType":"225","messageId":"226","endLine":257,"endColumn":61},{"ruleId":"223","severity":1,"message":"224","line":257,"column":72,"nodeType":"225","messageId":"226","endLine":257,"endColumn":74},{"ruleId":"223","severity":1,"message":"227","line":257,"column":72,"nodeType":"225","messageId":"226","endLine":257,"endColumn":74},{"ruleId":"223","severity":1,"message":"227","line":257,"column":87,"nodeType":"225","messageId":"226","endLine":257,"endColumn":89},{"ruleId":"228","severity":1,"message":"229","line":280,"column":21,"nodeType":"230","endLine":282,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":3,"column":7,"nodeType":"233","messageId":"234","endLine":3,"endColumn":29},{"ruleId":"220","severity":1,"message":"221","line":16,"column":1,"nodeType":"222","endLine":94,"endColumn":2},{"ruleId":"235","severity":1,"message":"236","line":24,"column":37,"nodeType":"237","messageId":"238","endLine":24,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":24,"column":55,"nodeType":"237","messageId":"238","endLine":24,"endColumn":56},{"ruleId":"235","severity":1,"message":"236","line":24,"column":74,"nodeType":"237","messageId":"238","endLine":24,"endColumn":75},{"ruleId":"235","severity":1,"message":"236","line":24,"column":89,"nodeType":"237","messageId":"238","endLine":24,"endColumn":90},{"ruleId":"235","severity":1,"message":"236","line":24,"column":103,"nodeType":"237","messageId":"238","endLine":24,"endColumn":104},{"ruleId":"235","severity":1,"message":"236","line":35,"column":30,"nodeType":"237","messageId":"238","endLine":35,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":35,"column":46,"nodeType":"237","messageId":"238","endLine":35,"endColumn":47},{"ruleId":"235","severity":1,"message":"236","line":35,"column":59,"nodeType":"237","messageId":"238","endLine":35,"endColumn":60},{"ruleId":"235","severity":1,"message":"236","line":35,"column":76,"nodeType":"237","messageId":"238","endLine":35,"endColumn":77},{"ruleId":"235","severity":1,"message":"236","line":46,"column":39,"nodeType":"237","messageId":"238","endLine":46,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":46,"column":56,"nodeType":"237","messageId":"238","endLine":46,"endColumn":57},{"ruleId":"220","severity":1,"message":"221","line":17,"column":1,"nodeType":"222","endLine":86,"endColumn":2},{"ruleId":"231","severity":1,"message":"239","line":1,"column":19,"nodeType":"233","messageId":"234","endLine":1,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":19,"column":1,"nodeType":"222","endLine":131,"endColumn":2},{"ruleId":"231","severity":1,"message":"240","line":11,"column":7,"nodeType":"233","messageId":"234","endLine":11,"endColumn":28},{"ruleId":"241","severity":1,"message":"242","line":33,"column":8,"nodeType":"243","endLine":33,"endColumn":20,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":37,"column":8,"nodeType":"243","endLine":37,"endColumn":21,"suggestions":"246"},{"ruleId":"241","severity":1,"message":"242","line":115,"column":8,"nodeType":"243","endLine":115,"endColumn":20,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"245","line":119,"column":8,"nodeType":"243","endLine":119,"endColumn":21,"suggestions":"248"},{"ruleId":"241","severity":1,"message":"242","line":196,"column":8,"nodeType":"243","endLine":196,"endColumn":20,"suggestions":"249"},{"ruleId":"241","severity":1,"message":"245","line":200,"column":8,"nodeType":"243","endLine":200,"endColumn":21,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"242","line":277,"column":8,"nodeType":"243","endLine":277,"endColumn":20,"suggestions":"251"},{"ruleId":"241","severity":1,"message":"245","line":281,"column":8,"nodeType":"243","endLine":281,"endColumn":21,"suggestions":"252"},{"ruleId":"241","severity":1,"message":"242","line":358,"column":8,"nodeType":"243","endLine":358,"endColumn":20,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"245","line":362,"column":8,"nodeType":"243","endLine":362,"endColumn":21,"suggestions":"254"},{"ruleId":"241","severity":1,"message":"242","line":439,"column":8,"nodeType":"243","endLine":439,"endColumn":20,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"245","line":443,"column":8,"nodeType":"243","endLine":443,"endColumn":21,"suggestions":"256"},{"ruleId":"220","severity":1,"message":"221","line":17,"column":1,"nodeType":"222","endLine":77,"endColumn":2},{"ruleId":"231","severity":1,"message":"257","line":20,"column":5,"nodeType":"233","messageId":"234","endLine":20,"endColumn":9},{"ruleId":"220","severity":1,"message":"221","line":24,"column":1,"nodeType":"222","endLine":91,"endColumn":2},{"ruleId":"231","severity":1,"message":"258","line":25,"column":28,"nodeType":"233","messageId":"234","endLine":25,"endColumn":45},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":5,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":12,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":12,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":7,"column":1,"nodeType":"222","endLine":14,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":12,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":91,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":8,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":52,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":12,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":11,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":46,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","endLine":64,"endColumn":2},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","react/jsx-pascal-case","Imported JSX component Header_img must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'defaultBackgroundColor' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'CircleProgressBarBase' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatePercentage'. Either include it or remove the dependency array.","ArrayExpression",["261"],"React Hook useEffect has missing dependencies: 'percentage' and 'updatePercentage'. Either include them or remove the dependency array.",["262"],["263"],["264"],["265"],["266"],["267"],["268"],["269"],["270"],["271"],["272"],"'Icon' is defined but never used.","'setSecondaryColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"273","fix":"277"},{"desc":"275","fix":"278"},{"desc":"273","fix":"279"},{"desc":"275","fix":"280"},{"desc":"273","fix":"281"},{"desc":"275","fix":"282"},{"desc":"273","fix":"283"},{"desc":"275","fix":"284"},{"desc":"273","fix":"285"},{"desc":"275","fix":"286"},"Update the dependencies array to be: [percentage, updatePercentage]",{"range":"287","text":"288"},"Update the dependencies array to be: [percentage, progressBar, updatePercentage]",{"range":"289","text":"290"},{"range":"291","text":"288"},{"range":"292","text":"290"},{"range":"293","text":"288"},{"range":"294","text":"290"},{"range":"295","text":"288"},{"range":"296","text":"290"},{"range":"297","text":"288"},{"range":"298","text":"290"},{"range":"299","text":"288"},{"range":"300","text":"290"},[1075,1087],"[percentage, updatePercentage]",[1182,1195],"[percentage, progressBar, updatePercentage]",[4003,4015],[4110,4123],[6929,6941],[7036,7049],[9855,9867],[9962,9975],[12781,12793],[12888,12901],[15707,15719],[15814,15827]]